#include <bits/stdc++.h>
#include <algorithm>
#define ll long long
#define ull unsigned long long
#define ld long double
#define f first
#define s second
#define PI acos(-1)
#define CS ios_base::sync_with_stdio(0);cin.tie(0);
using namespace std;

map<int,bool>vis;
int main(){
    int n,l,x,y;cin>>n>>l>>x>>y;
    int arr[n];
    for(int i=0;i<n;i++)cin>>arr[i],vis[arr[i]]=1;
    bool X=0,Y=0;
    for(int i=0;i<n;i++){
        int be=0,en=n-1,mid=(be+en)/2;
        if(!X)
            while(be<=en){
                mid=(be+en)/2;
                if(arr[mid]-arr[i]==x){X=1;break;}
                else if(arr[mid]-arr[i]>x)en=mid-1;
                else be=mid+1;
            }
        be=0,en=n-1,mid=(be+en)/2;
        if(!Y)
            while(be<=en){
                mid=(be+en)/2;
                if(arr[mid]-arr[i]==y){Y=1;break;}
                else if(arr[mid]-arr[i]>y)en=mid-1;
                else be=mid+1;
            }
        if(X&&Y)break;
    }
    if(X&&Y)cout<<0;
    else if(X)cout<<1<<'\n'<<y;
    else if(Y)cout<<1<<'\n'<<x;
    else {
        for(int i=0;i<n-1;i++){
            int nwx=arr[i]+x,nwy=arr[i]+y;
            int be=0,en=n-1,mid=(be+en)/2;
            if(nwx<=l)
                while(be<=en){
                    mid=(be+en)/2;
                    int k=arr[mid]-nwx,c=1;
                    if(arr[mid]<nwx)k*=-1,c=-1;
                    if(k==y){cout<<1<<'\n'<<nwx;return 0;}
                    else if(k>y){if(c==1)en=mid-1;else be=mid+1;}
                    else {if(c==1)be=mid+1;else en=mid-1;}
                }
            be=0,en=n-1,mid=(be+en)/2;
            nwx=arr[i]-x;
            if(nwx>=0)
                while(be<=en){
                    mid=(be+en)/2;
                    int k=arr[mid]-nwx,c=1;
                    if(arr[mid]<nwx)k*=-1,c=-1;
                    if(k==y){cout<<1<<'\n'<<nwx;return 0;}
                    else if(k>y){if(c==1)en=mid-1;else be=mid+1;}
                    else {if(c==1)be=mid+1;else en=mid-1;}
                }
            be=0,en=n-1,mid=(be+en)/2;
            if(nwy<=l)
                while(be<=en){
                    mid=(be+en)/2;
                    int k=arr[mid]-nwy,c=1;
                    if(arr[mid]<nwy)k*=-1,c=-1;
                    if(k==x){cout<<1<<'\n'<<nwy;return 0;}
                    else if(k>x){if(c==1)en=mid-1;else be=mid+1;}
                    else {if(c==1)be=mid+1;else en=mid-1;}
                }
            be=0,en=n-1,mid=(be+en)/2;
            nwy=arr[i]-y;
            if(nwy>=0)
                while(be<=en){
                    mid=(be+en)/2;
                    int k=arr[mid]-nwy,c=1;
                    if(arr[mid]<nwy)k*=-1,c=-1;
                    if(k==x){cout<<1<<'\n'<<nwy;return 0;}
                    else if(k>x){if(c==1)en=mid-1;else be=mid+1;}
                    else {if(c==1)be=mid+1;else en=mid-1;}
                }
        }
        cout<<2<<'\n'<<x<<' '<<y;
    }
    return 0;
}
